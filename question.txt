1. Какую функцию выполняют файлы
- web.xml
- glassfiash-web.xml
- faces-config.xml

Ответ:
web.xml - конфигурационный файл который отвечает за то как будет развернуто javaee приложение или модуль. Определяет все сервлеты и фильтры используемые сервисом. Wikipedia
glassfish-web.xml - конфигурайционный файл самого приложения (war файл) https://docs.oracle.com/cd/E18930_01/html/821-2417/beaql.html
faces-config.xml - настраивает обрабтчики событий https://facelets.java.net/nonav/docs/dev/docbook.html

=============================================================

2. Чем отличаются архивы с расширением JAR, EAR, WAR

JAR - редставляет собой обычный ZIP-архив, в котором содержится часть программы на языке Java.
WAR - архив описывающий, как полное веб-приложение упаковывается в соответствии со спецификацией Java-сервлетов в файл в формате JAR или ZIP.
EAR -  формат файлов, используемый Java EE для упаковки одного или более модулей в одном архиве, чтобы развёртывание различных модулей на сервере приложений происходило одновременно и согласованно.

https://ru.wikipedia.org/wiki/EAR

=============================================================

3. Какой протокол используется для описания интерфейса Веб Службы (Web Service). Как
используется это описание.

WSDL: Язык описания внешних интерфейсов веб-службы на базе XML;

=============================================================

4. Какой протокол используется для коммуникации с Веб Службами (Web Service).

SOAP: Протокол обмена сообщениями на базе XML.
Для удаленного вызова процедур и обмена произвольными сообщениями.

=============================================================

5. Что такое и для чего используется JavaServer Faces Expression Language.

Позволяет создателям страниц использовать  простые выражения для динамического доступа к данными из JavaBeans компонентов. Эти выражения можно вставлять непосредственно разметку JSF страницы.

=============================================================

6. Для каких целей может быть использован следующий тег на JSF странице
<h:commandButton action="${shopManagedBean.buy}" value="$
{shopManagedBean.buttonName}" />

Тен выведит на страницу кнопку к кторой будет привязан метов buy и занчение value кнокпи (название кнопки) будет взято из свойства buttonName.

=============================================================

7. Какие потенциальные ошибки в следующем теге
<h:outputText value="{gameManagedBean}">

не хватает  знакка $ (Immediate Evaluation) // или # перред {gameManagedBean}.
И скорее всего нужно ссыфлаться на свойство объекта а не на весь объект 
<h:outputText value="${gameManagedBean.messages}">

http://docs.oracle.com/javaee/6/tutorial/doc/bnahr.html

=============================================================

8. Для сего нужен тег <f:view>

Является контейнером для всех тегов JavaServer Faces на странице.

http://www.jsftoolbox.com/documentation/help/12-TagReference/core/f_view.html

=============================================================

9. Для чего нужен тег <h:form>

Этот тег рендерится в HTML форму.

http://www.jsftoolbox.com/documentation/help/12-TagReference/html/h_form.html

=============================================================

10. Что означает пара аннотаций
@ManagedBean
@SessionScoped

Эти анотации отмечают класс как управляемый компонент JSF и будет являться действительным во время всей веб-сессии.
@ManagedBean - класс передается на управления ManageBean
@SessionScoped - поределяет время жизни  в жизненном цимкле приложения
http://docs.oracle.com/cd/E19226-01/820-7759/gimpu/index.html
http://forum.vingrad.ru/topic-311288.html

=============================================================


10. Что означает пара аннотаций
@ManagedBean
@RequestScoped

@ManagedBean	
Регистрирует экземпляр этого класса в качестве управляемого bean-компонента и помещает его в область видимости, указанную одной из аннотаций @...Scoped. Если область видимости не указана, JSF помещает bean-компонент в область видимости запроса, а если не указано имя, JSF генерирует имя, конвертируя первую букву имени класса в нижний регистр; например, для класса с именем UserBean JSF создает управляемый bean-компонент с именем userBean. Атрибуты eager и name являются необязательными.
Эту аннотацию можно использовать только для Java-классов, реализующих конструктор без аргументов.
eager, name
@ApplicationScoped	Помещает управляемый bean-компонент в область видимости приложения.	
@SessionScoped	Помещает управляемый bean-компонент в область видимости сеанса.	
@RequestScoped	Помещает управляемый bean-компонент в область видимости запроса.

http://www.ibm.com/developerworks/ru/library/j-jsf2fu1/

=============================================================

11. Чем отличаются аннотации
@ManagedBean и @Named
@ManagedBean управлется JSF, а @Named упарвляется CDI.

http://docs.oracle.com/javaee/6/tutorial/doc/giwhl.html

=============================================================

12. При нажатии на кнопку в браузере, в управляемом JSF компоненте будет вызван
соответствующий метод. Как в теле метода получить данные, введённые в текстовые поля
страницы?

???
=============================================================

13. Для чего используется аннотация @WebMethod, какими ещё аннотациями должен быть
помечен код, для использования этой аннотации.

Указывает, на то, что метод предоставлется для публичного взаимодействия в Веб-сервиса.
Такой метод может быть вызван например через SOAP протокол.

http://docs.oracle.com/cd/E13222_01/wls/docs92/webserv/annotations.html

=============================================================

14. Почему класс Servlet имеет наследника HttpServlet

HttpServlet может работать с проктолом HTTP, а от Servlet он получает init(), destroy(), service()


=============================================================

15. Зачем нужны методы doPost(), doGet(), init() и destroy() в интерфейсе HttpServlet

doPost(), doGet() - методы определяющие реакцию на соотвествующие вида запросов
init() - вызывается при первой загрузке сервлета, и выполняет необходимые работы по кстановке сервлета (открытие файлов, устновка соединений)ж
destroy() - вызывается при окончании работы сервлета.

http://www.java2ee.ru/servlets/lifecycle.html
http://www.java2ee.ru/servlets/HttpServlet.html
http://docs.oracle.com/javaee/1.3/api/javax/servlet/http/HttpServlet.html

=============================================================

16. Каким образом формируется ответ пользователю в HttpServlet

Клиент отправляет запрос на сервер. Запрос попадает в веб контеней в котором вызвается метода service() получающий два аргумент экземляр объекта запроса и экземпляр объекта ответа. В зависимоти от типа запроса service() вызвает подходящий метод, например doGet() или  doPost(). Они и формируют ответ пользовтателю.

=============================================================

17. Что означает аннотация @Entity

Она говорит о том, что данный класс должен быть отображен в базу данных. Сущесвуют некоторые требования, которым должен удовлетворять класс-сущность, вот некоторые из них: он не должен быть final, не должен иметь отображаемых аттрибутов с модификатором final, должен содержать конструктор без аргументов (определенный пользователем или по умолчанию), а доступ извне к полям объекта должен осуществляться через соответствующие get и set методы. 

http://www.tune-it.ru/web/vnik/home/-/blogs/%D0%BD%D0%B0%D1%87%D0%B0%D0%BB%D0%BE-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D1%8B-%D1%81-java-persistence-api;jsessionid=b9d1e94ec88ac427441025bdc874?p_p_auth=aU4C1Dat

=============================================================

18. Каким образом можно управлять жизненным циклом Entity?

Управлаять жизненным циклом Entity можно с помощью экземпляра класса EntityManager 
Экземпляр Entity может принадлежать к одному из четырех состояний: new, managed, detached, or removed.

New - новая сущность которая езе не была сасоцированна с опреленным контекстом.
Managed - сущность создана и привязана к определенному конектсу.
Detached - сущность создана но уже откреплена от контектса.
Removed - сущность создана и ассоцирована с контекстом, но планируется быть удаленной из хранлища данных


http://docs.oracle.com/javaee/5/tutorial/doc/bnbqw.html#bnbrc

=============================================================

19. Какую роль выполняет атрибут "required" в JavaServer Faces теге?

Если отмечен как true, JSF верифицирует это значение для отправка в компонент и отмечает его как невалидное и фызывает сообщение об ошибке если установлное ззначение не true.

https://books.google.ru/books?id=oZVTuH67oWgC&pg=PT271&lpg=PT271&dq=attribute+%22required%22+in+tag++JavaServer+Faces&source=bl&ots=7Y58ofaoTC&sig=UFT4hYlj0nrq--eXAgTP1JksJ_E&hl=ru&sa=X&ei=GIyaVInYCOveywP9rIG4Cw&ved=0CDUQ6AEwAw#v=onepage&q=required&f=false

=============================================================


20. Как можно проверить, что содержание тега JSF удовлетворяет заданному шаблону
Regexp?

<h:inputSecret id="password" value="#{user.password}">
  <f:validateRegex pattern="((?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{6,20})" />
</h:inputSecret>

=============================================================


21. Данные вводятся пользователем в текстовом виде. Как задать формат и локаль данных,
чтобы в Java-коде данные были представлены типом java.util.Date?

=============================================================

22. Что выполняет следующий запрос?
Select u from User u where u.firstName="Иван"

Выбрать запис из таблицы User в кторых поле firstName равно "Иван"

=============================================================

23. Каким образом можно задать параметр запроса в EJB QL? Чтобы его значение можно
было задавать динамически на этапе выпонения.

???

=============================================================

24. Какую функцию выполняют аннотации в JavaEE?

Java-аннотация — в языке Java специальная форма синтетических метаданных, которая может быть добавлена в исходный код.

Аннотации используются для анализа кода, компиляции или выполнения. Аннотированы могут быть пакеты, классы, методы, переменные и параметры.

https://ru.wikipedia.org/wiki/%D0%90%D0%BD%D0%BD%D0%BE%D1%82%D0%B0%D1%86%D0%B8%D1%8F_(Java)
https://www.google.ru/url?sa=t&rct=j&q=&esrc=s&source=web&cd=7&cad=rja&uact=8&ved=0CEEQFjAG&url=http%3A%2F%2Fvavakumov.blogspot.com%2F2013%2F04%2Fjava.html&ei=n5yaVJWuHcm-ygOul4HACw&usg=AFQjCNHn6FbyC2V4w_9pn7wH-2EOF61J4Q&bvm=bv.82001339,d.bGQ

=============================================================

25. Что имеет больший приоритет для контейнера на этапе выполнения — аннотация или
соответствующий ей тег в дескрипторе развёртывания?

???

=============================================================


26. Чем отличаются методы EntityManager persist, refresh, merge?

persist
Сделать экземпля управляемым и усточивым (Make an instance managed and persistent.)
http://docs.oracle.com/javaee/6/api/javax/persistence/EntityManager.html#persist(java.lang.Object)

refresh
Обновляет состояние экземпляра из базы данных, перезаписывая изменения в сущность, если такая есть,  и  блокирует  с задаными свойствами

merge
Производит слияение состояния переданной сущности в текущий контект сохранения (persistence).
http://docs.oracle.com/javaee/6/api/javax/persistence/EntityManager.html#merge(T)

=============================================================

27. Каким образом реализовано наследование классов в Java Persistence API?

=============================================================

28. Каким образом можно указать тип отношение между сущностями (например "один ко
многим")?

@OneToMany(cascade=REMOVE, mappedBy="customer")
public Set<Order> getOrders() { return orders; }

web-dot.ru/wp-content/uploads/2010/12/%25D0%2592%25D0%25B2%25D0%25B5%25D0%25B4%25D0%25B5%25D0%25BD%25D0%25B8%25D0%25B5-%25D0%25B2-JPA.pdf

=============================================================

29. Чем отличаются типы Session EJB компонентов?

Вызываются пользователем для совершения какой-либо бизнесс-операции. Существует 2 типа session-beans: stateless и stateful.
Stateful-бины автоматически сохраняют свое состояние между разными клиентскими вызовами. Типичным примером stateful-бина является корзина в интернет-магазине.
Stateless-бины используются для реализации бизнесс-процессов, которые могут быть завершены за одну операцию.Так же на основе stateless-бинов проектируются web-сервиса.

https://www.google.ru/url?sa=t&rct=j&q=&esrc=s&source=web&cd=2&cad=rja&uact=8&ved=0CCQQFjAB&url=http%3A%2F%2Fj4sq.blogspot.com%2F2011%2F10%2Fejb-1.html&ei=tKiaVNjHAsXTygPYo4CQDA&usg=AFQjCNG5M94NWwaq9UssDHEF57SavD0CLw&bvm=bv.82001339,d.bGQ

=============================================================

30. В чём основное отличие Session EJB компонентов от Message Driven EJB компонентов?

Так же как и session beans используются для бизнесс-логики. Отличие в том, что клиенты никогда не вызывают MDB напрямую. Обычно сервер использует MDB в асинхронных запросах.

https://www.google.ru/url?sa=t&rct=j&q=&esrc=s&source=web&cd=2&cad=rja&uact=8&ved=0CCQQFjAB&url=http%3A%2F%2Fj4sq.blogspot.com%2F2011%2F10%2Fejb-1.html&ei=tKiaVNjHAsXTygPYo4CQDA&usg=AFQjCNG5M94NWwaq9UssDHEF57SavD0CLw&bvm=bv.82001339,d.bGQ

=============================================================

31. Чем отличается topic от queue при использовании Message Driven Bean компонентов?

Существует два типа каналов, по кторым осуществляет Message Driven Bean. Топики реализуют модель издателя и подписчика, при которой сообщение может быть доставлено любому числу подписчиков. Числу классов (не екзепляров) которые слушают топик.
Наоборот, queues реализует модель один-к-одному, в которой сообщение отправлется определеному классу message-driven bean.

http://docs.oracle.com/cd/E11035_01/workshop102/ejb/messagedriven/conGettingStartedWithMDBs.html#TopicsandQueues

=============================================================

32. В чём отличие Form-based аутентификации от Basic аутентификации?

Basic
-> Клиент запрашивает защищенную страницу.
<- Сервер просит ввести пароль и логин
-> пользователь отправлет логин и рполь
<- Сервер отправляет запрашиваемую страницу

Form-based
-> Клиент запрашивает защищенную страницу.
<- Перенаправляет клиента на страницу ввода логина и пароля
-> Клиент отправляет форму
<- Сервер проверяет введенные данные и перенаправялет клиенталибо на запрашиваему страницу либо на страницу с ошибкой

=============================================================

33. Чем отличается программной и декларативной моделей безопасности в JavaEE.

???
=============================================================

34. Что такое перехватчики (Interceptor)
???

=============================================================

35. Что находится в объекте o после выполнения следующего кода
Context ic = new InitialContext();
Object o = ic.lookup("java:comp/env/ejb/Foo");

????

=============================================================

36. Каким образом будет инициализирована ссылка myDB?
@Resource
private javax.sql.DataSource myDB;

????


=============================================================

37. Как модифицировать следующий код, чтобы при неудачной транзакции произошёл откат
транзакции?
UserTransaction utx = ctx.getUserTransaction();
utx.begin();
utx.commit();

????


=============================================================

38. Где будет работать такой подход?
@Resource
private UserTransaction utx;

????

=============================================================

39. Что означает следующая аннотация
@TransactionAttribute(REQUIRED)

????

=============================================================

40. Что означают прфиксы f, ui, h в следующих тегах?
<f:view>
The JSF Core tag library contains general purpose tags for conversion, validation, Ajax, and other use cases.
Набор основных тегов для валидации, аякса, переходов и прочего.


<h:form>
This tag library contains JavaServer Faces component tags for all UIComponent + HTML RenderKit Renderer combinations defined in the JavaServer Faces Specification.

Содержит теги которые будут отрендреены в HTML.

<ui:repeat>
The Facelets View Definition framework provides a compelling alternative to JSP for implementing JSF user interfaces. Based on the Composite View design pattern, Facelets is a fast and powerful templating solution for JSF applications. Since JSF 2.0, Facelets is now the preferred View Declaration Language (VDL) for JSF and has been integrated into the core JSF framework. Facelets is required for advanced features such as JSF2 composite components.
Пользоавтельский интрейес - repeat/ hide/ и т.д.

=============================================================

41. Чем отличаются локальный и удалённый интерфейсы в спецификации Enterprise
JavaBeans?

????
